{"pageProps":{"data":{"kind":"blogger#post","id":"6327241438335196696","blog":{"id":"1878161774557981040"},"published":"2021-01-05T23:34:00-08:00","updated":"2021-01-06T03:17:09-08:00","url":"http://disa-ada.blogspot.com/2021/01/deploy-projek-nextjs-ke-github-pages.html","selfLink":"https://www.googleapis.com/blogger/v3/blogs/1878161774557981040/posts/6327241438335196696","title":"Deploy Projek Next.js Ke Github Pages","content":"<div><h3 class=\"LC20lb DKV0Md\" style=\"display: inline-block; font-weight: normal; line-height: 1.3; margin: 0px 0px 3px; padding: 4px 0px 0px;\"><span dir=\"rtl\" style=\"unicode-bidi: isolate;\"><span style=\"font-family: Amiri; font-size: medium;\">بِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيم</span></span></h3></div><div><br /></div><b>Contoh hasil akhir </b>: <a href=\"https://disaada.github.io/\">Disa's Blog</a><div><br /></div><div><b>Source</b> : <a href=\"https://github.com/disaada/disaada.github.io\">source</a>&nbsp;</div><div><br /></div><div><b>Bahan-bahan yang diperlukan </b>:</div><div>1. Akun <a href=\"https://github.com/\">Github</a>. Sebagai <i>remote</i> repositori.</div><div>2. Akun <a href=\"https://travis-ci.org/\">Travis CI</a>. Kita akan menggukan Travis CI sebagai layanan hostingnya. Biasa dipakai untuk projek-projek <i>open source</i>. Terintegrasi dengan Github.</div><div>3. Projek <a href=\"https://nextjs.org/\">Next.js</a>.</div><div><br /></div><div><b>Cara kerja</b> :</div><div>Karena Github Pages ada hosting khusus website statis saja, jadi kita akan menggunakan perintah n<b>ext export</b> pada projek Next.js kita untuk meng-<i>export</i> projek kita menjadi halaman-halaman statis. Dengan memanfaatkan Travis CI, kita akan <i>setting</i> Travis CI agar menjalankan perintah <b>next export</b> saat ia mem-<i>build</i> projek kita.</div><div><br /></div><div><b>Langkah-langkah</b> :</div><div>1. <b>Membuat Github Token</b></div><div>Berfungsi sebagai kunci untuk menghubungkan Travis CI dan Github. Jika sudah punya bisa di-<i>skip. </i>Kalau belum punya masuk ke <b>Settings</b>&nbsp;akun Github kita, klik submenu <b>Developer Settings</b>, pilih <b>Personal access tokens, </b>klik tombol <b>Generate new token</b>, masukkan <i>password</i>&nbsp;akun jika diminta, <i>checklist</i>&nbsp;option <b>repo</b>, lalu klik tombol <b>Generate token</b>, <i>copy</i>&nbsp;tokennya.</div><div><br /></div><div>Lalu masuk ke akun Travis CI, tambahkan dulu projek kita ke Travis CI. Jika sudah, pilih projek kita, klik tombol <b>More option, </b>lalu pilih <b>Settings, </b><i>drag </i>hingga ke setting <b>Environment Variables, </b>isi namanya dengan <b>GITHUB_TOKEN</b>&nbsp;(nama bebas, asal sama dengan yang ada di settingan <b>.travis.yml </b>di <i>step</i> kedua nanti), isi valuenya dengan token yang sudah kita dapatkan di Github, isi branchnya dengan branch utama, lalu klik tombol <b>Add.</b></div><div><b><br /></b></div><div><b><br /></b></div><div>2. <b>Membuat settingan Travis CI</b></div><div>buat file bernama <b>.travis.yml </b>di tempat paling luar folder projek kita. Lalu isi dengan settingan berikut (<a href=\"https://gist.github.com/disaada/8707a3fd5bfa2ef21c62f431a0b59bfd\">klik ini</a> jika source tidak tampil)</div><div><script src=\"https://gist.github.com/disaada/8707a3fd5bfa2ef21c62f431a0b59bfd.js\"></script></div><div>lalu push projek kita ke Github. Pastikan nama reponya ada <b>usernamekamu.github.io</b> ya, misal <i>username</i> saya disaada maka nama reponya disaada.github.io. Jika projek kita sudah pernah disimpan di Github berarti hanya tinggal menambahkan .travis.yml ke sana.</div><div><br /></div><div>3. <b>Setting Github Pages</b></div><div>Buat branch gh-pages terlebih dahulu di <i>remote</i> repositori kita. Jika sudah, masuk <i>remote</i> repositori projek Next.js kita, lalu pilih menu <b>Settings</b>&nbsp;(bukan setting akun Github yah, tapi setting repositori kita). Lalu <i>drag</i> hingga ke settingan <b>Github Pages</b>, lalu pilih branch gh-pages dan klik tombol <b>Save.</b></div><div><b><br /></b></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://1.bp.blogspot.com/-v5kMWCth9pw/X_Vnt7AWA5I/AAAAAAAABik/Xske7QyLdNYEzGEpffMhOJ26vsO87SCbACLcBGAsYHQ/s961/Screenshot%2Bfrom%2B2021-01-06%2B14-32-48.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"306\" data-original-width=\"961\" height=\"203\" src=\"https://1.bp.blogspot.com/-v5kMWCth9pw/X_Vnt7AWA5I/AAAAAAAABik/Xske7QyLdNYEzGEpffMhOJ26vsO87SCbACLcBGAsYHQ/w640-h203/Screenshot%2Bfrom%2B2021-01-06%2B14-32-48.png\" width=\"640\" /></a></div><b><br /></b></div><div><b>kekurangan :</b></div><div>1. Bagus untuk projek yang tidak berinteraksi dengan API. Jika membutuhkan interaksi dengan API, maka ia hanya akan mengakses sekali saya yaitu ketika projek sedang di-<i>build.</i><b>&nbsp;</b>Ia tidak bisa melakukan SSR (<i>server side rendering) </i>dengan menggunakan <b>getServerSideProps. </b>Misal seperti blog Github Pages saya di atas, karena saya ambil postingan-postingannya dari Blogger API (biar cepat, kapan-kapan saya mau belajar buat blog API dengan RoR) secara statis dengan menggunakan <b>getStaticProps</b>, maka jika ada postingan baru tidak akan otomatis muncul di blog Github Pages sampai saya <i>build </i>ulang blog Github Pages saya di Travis CI.</div><div>2. (Untuk kasus blog yang kontennya ngambil dari <i>external source</i> seperti Blogger) tidak bisa <i>inject</i> HTML di dalam konten. Contohnya di postingan ini saya menyajikan source dengan Gist Github. Kalau di Blogger ini bisa muncul. Tapi tidak kalau di Github Pages. Masih mencari solusinya. Sementara disiasati dengan menyertakan <i>link</i>.</div><div><br /></div><div><b>kali aja kalau ada yang bertanya</b>&nbsp;: lah sudah punya Blogger ngapain dibikin lagi di Github Pages? gabut?</div><div>1. Iya gabut</div><div>2. Mumpung gabut saya pakai waktunya belajar Next.js</div><div>3. <i>Challenge </i>diri sendiri<i>, </i>contohnya kan jadi ada tantangan baru seperti di kekurangan no. 2</div><div>4. Biar lebih bagus domain blognya. Daripada belakangannya blogspot.com, kalau github.io kan lebih terasa <i>sense of web engineer</i> nya huehehehehe</div><div>5. Bisa saja di siasati dengan me-<i>link-</i>an yang ada di Github Pages ke Blogger/Medium seperti yang saya lihat di beberapa personal web para <i>web engineer</i>, tapi saya mau memberikan user experience ala orang mager yang tidak suka berpindah-pindah. Semua satu tempat di Github Pages.</div><div><br /></div><div><span style=\"background-color: white;\"><span style=\"font-family: Amiri; font-size: medium;\">ٱلْحَمْدُ لِلَّٰهِ رَبِّ ٱلْعَالَمِينَ</span></span></div>","author":{"id":"02079035408372565918","displayName":"Disa Ada","url":"https://www.blogger.com/profile/02079035408372565918","image":{"url":"//www.blogger.com/img/blogger_logo_round_35.png"}},"replies":{"totalItems":"0","selfLink":"https://www.googleapis.com/blogger/v3/blogs/1878161774557981040/posts/6327241438335196696/comments"},"labels":["Web Developing"],"etag":"\"dGltZXN0YW1wOiAxNjA5OTMxODI5MjEzCm9mZnNldDogLTI4ODAwMDAwCg\""}},"__N_SSG":true}